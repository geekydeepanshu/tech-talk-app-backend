{
  "openapi": "3.0.0",
  "info": {
    "title": "Tech Talk App API",
    "version": "1.0.0",
    "description": "Tech Talk App API Documentation"
  },
  "servers": [
    {
      "url": "http://localhost:5005",
      "description": "Local server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "required": ["username", "email", "password"],
        "properties": {
          "username": {
            "type": "string",
            "description": "User's username"
          },
          "email": {
            "type": "string",
            "description": "User's email"
          },
          "password": {
            "type": "string",
            "description": "User's password"
          }
        }
      },
      "Post": {
        "type": "object",
        "required": ["title", "description"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Auto-generated post ID"
          },
          "title": {
            "type": "string",
            "description": "Post title"
          },
          "description": {
            "type": "string",
            "description": "Post description"
          },
          "image": {
            "type": "string",
            "description": "Image URL for the post"
          },
          "author": {
            "type": "string",
            "description": "Post author"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Post creation date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Post last update date"
          }
        }
      }
    }
  },
  "paths": {
    "/api/v1/users/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/api/v1/users/login": {
      "post": {
        "summary": "Log in a user",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's email"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password"
                  }
                },
                "required": ["email", "password"]
              }
            }
          },
          "responses": {
            "200": {
              "description": "User logged in successfully"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      }
    },
    "/api/v1/posts": {
      "get": {
        "summary": "Get all blog posts",
        "tags": ["Post"],
        "responses": {
          "200": {
            "description": "List of posts retrieved successfully"
          }
        }
      },
      "post": {
        "summary": "Create a new blog post",
        "tags": ["Post"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Post created successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/posts/{id}": {
      "get": {
        "summary": "Get a single post by ID",
        "tags": ["Post"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post retrieved successfully"
          },
          "404": {
            "description": "Post not found"
          }
        }
      },
      "put": {
        "summary": "Update a post by ID",
        "tags": ["Post"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Post not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a post by ID",
        "tags": ["Post"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    }
  }
}
